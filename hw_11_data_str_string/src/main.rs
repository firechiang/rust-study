/**
 * 字符串 str，&str，String 简单使用
 */
fn main() {
    // str类型几乎永远不会被用到，我们只能使用 &str，也就是引用，因为它不拥有自己的数据
    // "maomoa" 叫做字符串字面量，它的值永远不会被改变，要只用它就只能使用 &str，也就是引用
    // 静态字符串，它是有静态生命周期的，也就是在程序执行过程中不会变的，默认类型是字符串的引用
    let str= "maomoa";
    test(str);
    // String拥有自己的数据，而且可以被修改，而且数据是存在堆里面的（结构体里面的属性建议使用该类型）
    let str1 = String::from("maomoa");
}

// 函数要使用字符串参数，建议将字符串参数类型定义成 &str（静态字符串，它是有静态生命周期的，也就是在程序执行过程中不会变的）
fn test(str: &str) {
    println!("str={}",str);
}
